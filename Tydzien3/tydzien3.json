{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "VnetTemplateUrl": {
            "type": "string"
        },
        "VmTemplateUrl": { "type": "string" },
        "KeyvaultTemplateUrl": { "type": "string" },
        "EnvironmentName": {
            "type": "string",
            "defaultValue": "prod"
        },
        "Departament": {
            "type": "string",
            "defaultValue": "fin"
        },
        "AdminUserVm": { "type": "string" },
        "AdminPasswordVm": { "type": "string" },
        "ObjectIdAdUser": { "type": "string" },
        "RoleDefinition": { "type": "string" }
    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "name": "KeyvaultDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('KeyvaultTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "environmentName": { "value": "[parameters('EnvironmentName')]" },
                    "instanceNumber": { "value": "001" },
                    "departament": { "value": "[parameters('Departament')]" },
                    "objectId": { "value": "[parameters('ObjectIdAdUser')]" },
                    "adminUser": { "value": "[parameters('AdminUserVm')]" },
                    "adminPassword": { "value": "[parameters('AdminPasswordVm')]" }
                }
            }

        },
        {
            "name": "VnetDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('VnetTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "environmentName": { "value": "[parameters('EnvironmentName')]" },
                    "departament": { "value": "[parameters('Departament')]" }
                }
            }
        },
        {
            "name": "VmDeployment1",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'VnetDeployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'KeyvaultDeployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('VmTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "environmentName": { "value": "[parameters('EnvironmentName')]" },
                    "instanceNumber": { "value": "001" },
                    "departament": { "value": "[parameters('Departament')]" },
                    "adminUser": {
                        "reference": {
                            "KeyVault": {
                                "id": "[reference('KeyvaultDeployment').outputs.keyvaultId]",
                                "secretName": "[reference('KeyvaultDeployment').outputs.vmUserNameSecretName]"
                            }
                        }
                    },
                    "adminPass": {
                        "reference": {
                            "KeyVault": {
                                "id": "[reference('KeyvaultDeployment').outputs.keyvaultId]",
                                "secretName": "[reference('KeyvaultDeployment').outputs.vmPasswordSecretName]"
                            }
                        }
                    },
                    "subnetId": { "value": "[reference('VnetDeployment').outputs.subnet1Id.value]" }
                }
            }
        },
        {
            "name": "VmDeployment2",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'VnetDeployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'KeyvaultDeployment')]"
            ],
            "apiVersion": "2019-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('VmTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "environmentName": { "value": "[parameters('EnvironmentName')]" },
                    "instanceNumber": { "value": "002" },
                    "departament": { "value": "[parameters('Departament')]" },
                    "adminUser": { "value": "[parameters('AdminUserVm')]" },
                    "adminPass": { "value": "[parameters('AdminPasswordVm')]" },
                    "subnetId": { "value": "[reference('VnetDeployment').outputs.subnet2Id.value]" }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleDefinitions",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('RoleDefinition')]",
            "properties": {
                "roleName": "Virtual Machine Restarter",
                "description": "Allows to start, power off and read VM.",
                "type": "customRole",
                "isCustom": true,
                "permissions": [
                    {
                        "actions": [
                            "Microsoft.Compute/*/read",
                            "Microsoft.Compute/virtualMachines/start/action",
                            "Microsoft.Compute/virtualMachines/poweroff/action",
                            "Microsoft.Resources/subscriptions/resourceGroups/read",
                            "Microsoft.Support/*"
                        ]
                    }
                ],
                "assignableScopes": [
                    "[subscription().id]"
                ]
            }
        }
    ],
    "outputs": {}
}
